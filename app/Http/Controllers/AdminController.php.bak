<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use App\Models\Department;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Yajra\DataTables\DataTables;

class AdminController extends Controller
{
    public function registerUser(Request $request)
    {
        // Validate the registration data
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users',
            'password' => 'required|string|min:8|confirmed',
            'department' => 'required|string',
            'tender' => 'nullable|boolean',
            'newsEvent' => 'nullable|boolean',
            'about' => 'nullable|boolean',
            'career' => 'nullable|boolean',
            'document' => 'nullable|boolean',
            'disaster' => 'nullable|boolean',
            'contact' => 'nullable|boolean',
            'corporate' => 'nullable|boolean',
            'calendar' => 'nullable|boolean',
            'dailyGeneration' => 'nullable|boolean',
            'admin' => 'nullable|boolean',
        ]);

        // Create a new user
        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => bcrypt($request->password),
            'department_id' => $request->department,
            'tender' => $request->tender ? 1 : 0,
            'newsEvent' => $request->newsEvent ? 1 : 0,
            'about' => $request->about ? 1 : 0,
            'career' => $request->career ? 1 : 0,
            'document' => $request->document ? 1 : 0,
            'disaster' => $request->disaster ? 1 : 0,
            'contact' => $request->contact ? 1 : 0,
            'corporate' => $request->corporate ? 1 : 0,
            'calendar' => $request->calendar ? 1 : 0,
            'dailyGeneration' => $request->dailyGeneration ? 1 : 0,
            'admin' => $request->admin ? 1 : 0,
        ]);

        // Redirect the admin to a success page or any desired location
    return response()->json(['message' => 'User registered successfully'], 201);
    }

    public function index(Request $request)
    {
         // Join the users table with the departments table
        $data = User::select('users.*', 'departments.department as department_name')
        ->join('departments', 'users.department_id', '=', 'departments.id')
        ->get();

        $departments = Department::get();

        if ($request->ajax()) {
        return DataTables::of($data)
        ->addIndexColumn()
        ->addColumn('action', function ($data) {
            $btn = '<button data-id="' . $data->id . '" class="edit btn btn-primary btn-sm editBtn">
                    <span class="icon-bg"><i class="fas fa-edit"></i></span>
                    </button>';
            $btn .= ' <button data-id="' . $data->id . '" class="btn btn-danger btn-sm deleteBtn">
                    <span class="icon-bg"><i class="fas fa-trash-alt"></i></span>
                    </button>';
            return $btn;
        })
        ->rawColumns(['action'])
        ->make(true);
        }

        return view('admin.addUser', compact('data', 'departments'));
    }


    public function check(Request $request)
    {
        $id = $request->input('id');
        $check = $request->input('check');
        $role = $request->input('role');
        DB::table('users')->where('id', $id)->update([$role => $check]);
    }

    public function editUser($id)
    {
        $user = User::find($id);
        return response()->json([
            'status' => 200,
            'user' => $user,
        ]);
    }

    public function updateUser(Request $request)
    {
        $user = User::find($request->userID);
        $user->name = $request->input('editname');
        $user->email = $request->input('editemail');
        $user->update();
        return redirect()->back()->with('status', 'Board of directors information has been added');
    }

    public function deleteUser(Request $request)
    {
        $user = User::find($request->delete_id);
        $user->delete();
        return redirect()->back()->with('status', 'Board of directors information has been added');
    }

    public function indexDepartmenrt(Request $request)
    {
        $data = Department::get();

        // dd($data);

        if ($request->ajax()) {

            return DataTables::of($data)
                ->addIndexColumn()
                ->addColumn('action', function ($data) {

                    $btn = '<button data-id="' . $data->id . '" id="deleteBtn" class="btn btn-danger btn-sm  deleteBtn">
                           <span class="icon-bg"><i class="fas fa-trash-alt"></i></span>
                           </button>';

                    return $btn;
                })
                ->rawColumns(['action'])
                ->make(true);
        }

        return view('admin.department', compact('data'));
    }

    public function addDepartment(Request $request)
    {
        $department = new Department;
        $department->department = $request->input('department');
        $department->save();
        return response()->json(['success' => 'The above data has been stored successfully.']);
    }

    public function deleteDepartment(Request $request)
    {
        $department = Department::find($request->delete_id);
        if ($department) {
            $department->delete();
            return response()->json(['success' => 'Department deleted successfully.']);
        } else {
            return response()->json(['error' => 'Department not found.'], 404);
        }
    }

    public function fetchDepartment(Request $request)
    {
        $data = Department::get();
        return view('admin.adduser', ['department' => $data]);
    }
}
